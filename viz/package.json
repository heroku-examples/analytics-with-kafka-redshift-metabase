{
  "name": "kafka-stream-viz",
  "description": "A demo showing Heroku+AWS integration using Apache Kafka on Heroku and AWS RedShift.",
  "version": "1.0.0",
  "bugs": {
    "url": "https://github.com/heroku-examples/kafka-stream-viz/issues"
  },
  "dependencies": {
    "axios": "^0.19.0",
    "body-parser": "^1.19.0",
    "c3": "^0.7.11",
    "chart.js": "^2.9.0",
    "chartjs-plugin-datalabels": "^0.7.0",
    "chartjs-plugin-streaming": "^1.8.0",
    "config": "^3.2.5",
    "d3": "^5.12.0",
    "dateformat": "^3.0.3",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "express-basic-auth": "^1.2.0",
    "ioredis": "^4.14.1",
    "jquery": "^3.4.1",
    "knex": "^0.20.0",
    "lodash": "^4.17.15",
    "moment": "^2.24.0",
    "moving-average": "^1.0.0",
    "no-kafka": "^3.4.3",
    "normalize.css": "^8.0.1",
    "optimist": "^0.6.1",
    "pg-promise": "^9.1.4",
    "pug": "^2.0.4",
    "reconnecting-websocket": "^4.2.0",
    "ws": "^7.1.2"
  },
  "devDependencies": {
    "@babel/core": "^7.6.0",
    "@babel/preset-env": "^7.6.0",
    "acorn": "^7.1.1",
    "babel-loader": "^8.0.6",
    "babel-plugin-lodash": "^3.3.4",
    "clean-webpack-plugin": "^3.0.0",
    "connect-history-api-fallback": "^1.6.0",
    "css-loader": "^3.2.0",
    "html-webpack-plugin": "^3.2.0",
    "mini-css-extract-plugin": "^0.8.0",
    "optimize-css-assets-webpack-plugin": "^5.0.3",
    "postcss-import": "^12.0.1",
    "postcss-loader": "^3.0.0",
    "postcss-preset-env": "^6.7.0",
    "precss": "^4.0.0",
    "pug-loader": "^2.4.0",
    "style-loader": "^1.0.0",
    "uglifyjs-webpack-plugin": "^2.2.0",
    "webpack": "^4.40.2",
    "webpack-cli": "^3.3.9",
    "webpack-dev-middleware": "^3.7.1",
    "webpack-livereload-plugin": "^2.2.0"
  },
  "license": "MIT",
  "main": "bin/start",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git@github.com:crcastle/kafka-stream-viz.git"
  },
  "scripts": {
    "build": "NODE_ENV=production webpack",
    "dev": "NODE_ENV=development bin/start",
    "local-nokafka": "NODE_ENV=development node app.js --nokafka",
    "local-nodb": "NODE_ENV=development node app.js --nodb --nokafka",
    "start": "NODE_ENV=production bin/start"
  }
}
